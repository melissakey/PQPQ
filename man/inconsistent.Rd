% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/inconsistent.R
\name{inconsistent}
\alias{inconsistent}
\title{Calculate the inconsistency of a \code{hclust} object.}
\usage{
inconsistent(hclust_obj, cut_point = NULL)
}
\arguments{
\item{hclust_obj}{the input data - see details.}

\item{cut_point}{a value of inconsistency at which to split the clusters into groups.}
}
\value{
The original object of class \code{hclust}, with additional components containing the calculated inconsistency at each merge point and,
if \code{cut_point} is specified, the resulting clusters.
\item{inconsistency}{ The calculated inconsistency at each merge point.}
\item{clusters}{ A data frame with 2 variables: the label and the assigned cluster. (Only present if a \code{cut_point} is specified.)}
}
\description{
Calculates the inconsistency of a 'hclust' object and splits the data into clusters using a inconsistency-based cut-off.
}
\details{
This function calcualtes the inconsistency of a  \code{hclust} object.
This provides the same functionality as the \code{inconsistent} function in Matlab and the 'scipy' library in Python.
The inconsistency can be calculated as \deqn{\frac{h_{i} - \bar{h}}{s}} where \eqn{h_{i}} is the height of the given subtree;
and \eqn{\bar{h}} and \eqn{s} are respectively the mean and standard deviation of the height of the subtree and any non-leaf subtrees.
Note that the mean and standard deviationare calculated over 1, 2, or 3 heights depending on whether each subtree has 0, 1, or 2 non-leaf subtrees (with the resulting degenerecies).
By definition, a subtree where both of its subtrees are leaves has an inconsistency of 0.
}
\examples{
hc <- hclust(dist(USArrests), "ave")
hc_obj <- inconsistent(hc, 1)

# the first 6 merges all involve leaves, so the inconsistency is 0.
head(with(hc_obj, cbind(merge, height, inconsistency)))

# the last 6 merges are all non-leaves, so the inconsistency can be calculated
tail(with(hc_obj, cbind(merge, height, inconsistency)))

# Each element of the tree is assigned to a cluster.
head(hc_obj$clusters)
table(hc_obj$clusters$cluster)
}
\seealso{
\code{\link{hclust}}
}
